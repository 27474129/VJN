version: "3"

services:
  frontend:
    container_name: frontend
    build: ./frontend
    restart: always
    volumes:
      - ./frontend:/app/
      # - .app/node_modules
    depends_on:
      - api
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    networks:
      net:
        ipv4_address: 192.168.220.2

  api:
    container_name: api
    restart: always
    volumes:
      - ./api:/api/
    build: ./api
    ports:
      - "8000:8000"
    depends_on:
      - api_postgres
    networks:
      net:
        ipv4_address: 192.168.220.3

  api_postgres:
    container_name: api_postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "123"
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_INITDB_ARGS: "-A md5"
    # volumes:
      # - db:/var/lib/postgresql
    ports:
      - "54324:5432"
    networks:
      net:
        ipv4_address: 192.168.220.4

  stock_market:
    container_name: stock_market
    build: ./stock_market
    restart: always
    volumes:
      - ./stock_market:/stock_market/
    ports:
      - "8523:8523"
    depends_on:
      - stock_market_postgres
    networks:
      net:
        ipv4_address: 192.168.220.6

  stock_market_postgres:
    container_name: stock_market_postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "321"
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_INITDB_ARGS: "-A md5"
    expose:
      - "6888"
    # volumes:
      # - ./db:/var/lib/postgresql
    ports:
      - "6888:6888"
    command: -p 6888
    networks:
      net:
        ipv4_address: 192.168.220.5

networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.220.0/24

volumes:
  db: null
